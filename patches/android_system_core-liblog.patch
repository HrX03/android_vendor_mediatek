diff --git a/liblog/logger_write.c b/liblog/logger_write.c
index 2754e6e74c007bc80ba1a6d105d60938e0821d68..ff206d562c0955d544a806977cddaf14518ee4ad 100644
--- a/liblog/logger_write.c
+++ b/liblog/logger_write.c
@@ -29,6 +29,10 @@
 #include <private/android_filesystem_config.h>
 #include <private/android_logger.h>
 
+#ifndef FAKE_LOG_DEVICE
+#include <sys/system_properties.h>
+#endif
+
 #include "config_read.h" /* __android_log_config_read_close() definition */
 #include "config_write.h"
 #include "log_portability.h"
@@ -416,7 +420,7 @@ LIBLOG_ABI_PUBLIC int __android_log_write(int prio, const char* tag,
 LIBLOG_ABI_PUBLIC int __android_log_buf_write(int bufID, int prio,
                                               const char* tag, const char* msg) {
   struct iovec vec[3];
-  char tmp_tag[32];
+  char tmp_tag[32] = "0";
 
   if (!tag) tag = "";
 
@@ -463,6 +467,15 @@ LIBLOG_ABI_PUBLIC int __android_log_buf_write(int bufID, int prio,
     }
   }
 
+#ifndef FAKE_LOG_DEVICE
+    /* check property for moving all RIL logs to main */
+    if (bufID == LOG_ID_RADIO) {
+	if ((__system_property_get("persist.ril.log",tmp_tag) > 0) &&
+		!strcmp(tmp_tag,"1"))
+	    bufID = LOG_ID_MAIN;
+    }
+#endif
+
 #if __BIONIC__
   if (prio == ANDROID_LOG_FATAL) {
     android_set_abort_message(msg);
@@ -725,3 +738,26 @@ LIBLOG_ABI_PUBLIC int android_get_log_transport() {
 
   return ret;
 }
+
+#ifndef __unused
+#define __unused  __attribute__((__unused__))
+#endif
+struct xlog_record {
+    const char *tag_str;
+    const char *fmt_str;
+    int prio;
+};
+
+LIBLOG_ABI_PUBLIC void __attribute__((weak)) __xlog_buf_printf(int bufid __unused, const struct xlog_record *xlog_record __unused, ...) {
+#ifndef FAKE_LOG_DEVICE
+    char prop[32]="0";
+    /* check property for diable all xlog */
+    __system_property_get("ro.disable.xlog",prop);
+    if (!strcmp(prop, "0"))
+#endif
+    {
+	va_list args;
+	va_start(args, xlog_record);
+	__android_log_vprint(xlog_record->prio, xlog_record->tag_str, xlog_record->fmt_str, args);
+    }
+}
